<script>
  const platform = new H.service.Platform({ apikey: '<%= hereMapApiKey %>' });
  const defaultLayers = platform.createDefaultLayers();
  const map = new H.Map(document.getElementById('map'), defaultLayers.vector.normal.map, {
    zoom: 12,
    pixelRatio: window.devicePixelRatio || 1
  });
  window.addEventListener('resize', () => map.getViewPort().resize());
  const behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));
  const ui = H.ui.UI.createDefault(map, defaultLayers);

  function initiateMapRender(position) {
    var address = '<%= order.address.house %>' + ', ' + '<%= order.address.street %>' + ', ' + '<%= order.address.city %>';
    const searchText = address.toString();
    const geocoder = platform.getGeocodingService();
    geocoder.geocode({ searchText }, result => {
      const location = result.Response.View[0].Result[0].Location.DisplayPosition;
      const { Latitude: lat, Longitude: lng } = location;

      const request = {
        mode: 'fastest;car',
        waypoint0: `geo!${lat},${lng}`,
        waypoint1: `geo!${position.coords.latitude},${position.coords.longitude}`,
        representation: 'display'
      };

      const router = platform.getRoutingService();
      router.calculateRoute(request, response => {
        const shape = response.response.route[0].shape.map(x => x.split(','));
        const linestring = new H.geo.LineString();
        shape.forEach(s => linestring.pushLatLngAlt(s[0], s[1]));

        const routeLine = new H.map.Polyline(linestring, { style: { strokeColor: 'blue', lineWidth: 4 } });

        map.addObject(routeLine);
        map.getViewModel().setLookAtData({ bounds: routeLine.getBoundingBox() });
        map.setZoom(map.getZoom() + 1);
      });

      const currentLocIcon = new H.map.Icon('/img/markers/BlueMarker.svg');
      const currentLocMarker = new H.map.Marker(
        { lat: position.coords.latitude, lng: position.coords.longitude },
        { icon: currentLocIcon }
      );
      map.addObject(currentLocMarker);

      const destinationLocIcon = new H.map.Icon('/img/markers/GreenMarker.svg');
      const destinationLocMarker = new H.map.Marker(
        { lat: lat, lng: lng },
        { icon: destinationLocIcon }
      );
      map.addObject(destinationLocMarker);
    });
  }

  function getGeoLocation() {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(initiateMapRender);
    } else {
      alert('Something went wrong');
    }
  }
</script>